Sub StocksAnalysisAllYears()
    Dim ws As Worksheet
    
    ' Loop through all worksheets in the workbook
    For Each ws In ThisWorkbook.Worksheets
        Call StocksAnalysisMarketData(ws)
    Next ws
End Sub

Sub StocksAnalysisMarketData(ws As Worksheet)
    ' Set an initial variable for Ticker
    Dim ticker As String
    Dim lastRow As Long
    Dim i As Long
    Dim openingPrice As Double
    Dim closingPrice As Double
    Dim yearlyChange As Double
    Dim PercentChange As Double

    ws.Cells(1, 9).Value = "Ticker"
    ws.Cells(1, 10).Value = "Yearly Change"
    ws.Cells(1, 11).Value = "Percent Change"
    ws.Cells(1, 12).Value = "Total Stock Volume"
    ws.Cells(2, 15).Value = "Greatest % Increase"
    ws.Cells(3, 15).Value = "Greatest % Decrease"
    ws.Cells(4, 15).Value = "Greatest Total Volume"
    ws.Cells(1, 16).Value = "Ticker"
    ws.Cells(1, 17).Value = "Value"


    ' Set an initial variable for holding the TotalStockVolume
    Dim TotalStockVolume As Double
    TotalStockVolume = 0

    ' Keep track of the location for each Ticker Symbol
    Dim Ticker_Table_Row As Integer
    Ticker_Table_Row = 2

    ' Loop through all Tickers
    lastRow = ws.Cells(ws.Rows.Count, "A").End(xlUp).Row
    openingPrice = ws.Cells(2, 3).Value ' Opening price is in column C

    For i = 2 To lastRow
        ' Check if we are still within the same Ticker, if it is not...
        If ws.Cells(i + 1, 1).Value <> ws.Cells(i, 1).Value Then
            ' Set Ticker symbol
            ticker = ws.Cells(i, 1).Value

            ' Add to the TotalStockVolume
            TotalStockVolume = TotalStockVolume + ws.Cells(i, 7).Value

            ' Calculate YearlyChange; PercentChange
            closingPrice = ws.Cells(i, 6).Value ' Assuming closing price is in column F
            yearlyChange = closingPrice - openingPrice
            PercentChange = yearlyChange / openingPrice

            ' Print yearly change in a new column J
            ws.Range("J" & Ticker_Table_Row).Value = yearlyChange

            ' Print the Ticker in column "I"
            ws.Range("I" & Ticker_Table_Row).Value = ticker

            ' Print the TotalStockVolume in column "L"
            ws.Range("L" & Ticker_Table_Row).Value = TotalStockVolume

            ' Print the PercentChange in column "K"
            ws.Range("K" & Ticker_Table_Row).Value = PercentChange

            ' Add one to Ticker column
            Ticker_Table_Row = Ticker_Table_Row + 1
           

            ' Reset the TotalStockVolume
            TotalStockVolume = 0

            openingPrice = ws.Cells(i + 1, 3).Value

        ' If the cell immediately following a row is the same Ticker...
        Else
            ' Add to the TotalStockVolume
            TotalStockVolume = TotalStockVolume + ws.Cells(i, 7).Value
        End If
    Next i

    ' Find the greatest values
    Dim gpi As Double
    Dim gpd As Double
    Dim gpt As Double
    Dim greatestTicker As String

    gpi = ws.Cells(2, 11).Value
    gpd = ws.Cells(2, 11).Value
    gpt = ws.Cells(2, 12).Value

 RowCount = ws.Cells(Rows.Count, "I").End(xlUp).Row


    For j = 2 To Ticker_Table_Row
    Ticker_Table_Row = j + 1
    
    
        ' Comparing each percent change to the previous and finding the greatest percent increase among all
        If ws.Cells(j, 11).Value > gpi Then
            gpi = ws.Cells(j, 11).Value
            greatestTicker = ws.Cells(j, 9).Value
        End If

        ' Comparing each percent change to the previous and finding the greatest percent decrease among all
        If ws.Cells(j, 11).Value < gpd Then
            gpd = ws.Cells(j, 11).Value
            greatestTicker = ws.Cells(j, 9).Value
        End If

        ' Comparing all Total Stock Volume and finding the greatest Total Volume among all
        If ws.Cells(j, 12).Value > gpt Then
            gpt = ws.Cells(j, 12).Value
            greatestTicker = ws.Cells(j, 9).Value
        End If
    Next j

    ' Display the result for the gpi gpd gpt
    ws.Cells(2, 17).Value = gpi
    ws.Cells(2, 17).NumberFormat = "0.00%"
    ws.Cells(2, 16).Value = greatestTicker

    ws.Cells(3, 17).Value = gpd
    ws.Cells(3, 17).NumberFormat = "0.00%"
    ws.Cells(3, 16).Value = greatestTicker

    ws.Cells(4, 17).Value = gpt
    ws.Cells(4, 16).Value = greatestTicker

    ws.Range("K2:K" & Ticker_Table_Row).NumberFormat = "0.00%"
    
    
    'Using conditional formatting that will highlight positive change in green and negative change in red

    ' Find the last row with data in column J
    lastRow = ws.Cells(ws.Rows.Count, "J").End(xlUp).Row

    ' Loop through each cell in column J and highlight positive changes in green and negative changes in red
    For i = 2 To lastRow ' Assuming data starts from cell J2
        If ws.Cells(i, "J").Value >= 0 Then
            ws.Cells(i, "J").Interior.Color = RGB(0, 255, 0) ' Green color
        ElseIf ws.Cells(i, "J").Value < 0 Then
            ws.Cells(i, "J").Interior.Color = RGB(255, 0, 0) ' Red color
        End If
    Next i
    
    
End Sub



